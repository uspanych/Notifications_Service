version: "3"

services:
  web:
    build: ./src/
    env_file:
      - .env
    networks:
      - backend
    healthcheck:
      test: curl --fail http://localhost 8000 || exit -1
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  email_worker:
    build: ./email_worker
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always

  ws_worker:
    build: ./ws_worker
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 8765:8765
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always

  nginx:
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
    depends_on:
      - web
    ports:
      - 80:80
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: nginx
    networks:
      - backend

  redis:
    image: redis:latest
    networks:
      - backend
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 50

  rabbitmq:
    image: rabbitmq:3.11.13-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
    networks:
      - backend

  db:
    image: postgres:13
    env_file:
      - .env
    networks:
      - backend
    ports:
      - "5432:5432"


networks:
  backend:
    name: backend
    driver: bridge
